@model GilbertMusicStore.Models.Guitar

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Guitar</legend>

        @Html.HiddenFor(model => model.Id)

        @if (ViewBag.BodyTypeId != null)
        {
            <div class="editor-label">
                @Html.Label("BodyType")
            </div>
            <div class="editor-field">
                @Html.DropDownList("BodyTypeId", String.Empty)
            </div>
        }

        @if (ViewBag.PreampId != null)
        {
            <div class="editor-label">
                @Html.Label("Preamp")
            </div>
            <div class="editor-field">
                @Html.DropDownList("PreampId", String.Empty)
            </div>
        }

        @if (ViewBag.PickupId != null)
        {
            <div class="editor-label">
                @Html.Label("Pickup")
            </div>
            <div class="editor-field">
                @Html.DropDownList("PickupId", String.Empty)
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.BrandId, "Brand")
        </div>
        <div class="editor-field">
            @Html.DropDownList("BrandId", String.Empty)
            @Html.ValidationMessageFor(model => model.BrandId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Series)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Series)
            @Html.ValidationMessageFor(model => model.Series)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Model)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Model)
            @Html.ValidationMessageFor(model => model.Model)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FretsCount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FretsCount)
            @Html.ValidationMessageFor(model => model.FretsCount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Scale)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Scale)
            @Html.ValidationMessageFor(model => model.Scale)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BodyWood)
        </div>
        <div class="editor-field">
            @Html.DropDownList("BodyWoodId", String.Empty)
            @Html.ValidationMessageFor(model => model.BodyWood)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FretboardWood)
        </div>
        <div class="editor-field">
            @Html.DropDownList("FretboardWoodId", String.Empty)
            @Html.ValidationMessageFor(model => model.FretboardWood)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FingerboardWood)
        </div>
        <div class="editor-field">
            @Html.DropDownList("FingerboardWoodId", String.Empty)
            @Html.ValidationMessageFor(model => model.FingerboardWood)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ColorId, "Color")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ColorId", String.Empty)
            @Html.ValidationMessageFor(model => model.ColorId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ManufacturerId, "Manufacturer")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ManufacturerId", String.Empty)
            @Html.ValidationMessageFor(model => model.ManufacturerId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AdditionalInfo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AdditionalInfo)
            @Html.ValidationMessageFor(model => model.AdditionalInfo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LargeMainImageUrl)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LargeMainImageUrl)
            @Html.ValidationMessageFor(model => model.LargeMainImageUrl)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SmallMainImageUrl)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SmallMainImageUrl)
            @Html.ValidationMessageFor(model => model.SmallMainImageUrl)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
